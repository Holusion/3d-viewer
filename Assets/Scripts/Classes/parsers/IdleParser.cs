//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18444
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
namespace AssemblyCSharp
{
		public class IdleParser {
			
			private Models models;
			public IdleParser (Models models){
				this.models = models;
				//pos = Input.mousePosition;
			}
			//Call update with default 2second inactive time. 
			public bool update() {
				return this.update (2f);
			}

			public bool update(float timeInactive){
				Model model = models.getCurrent();
				//Rotate until rotation = Quaternion.identity.
				Quaternion currentRotation = model.getRotation();
				model.setRotation( new Vector3 (
					-(float) Math.Floor(currentRotation.x*20)/(20+5),
					0.4f,
					-(float) Math.Floor(currentRotation.z*20)/(20+5)
				));
				
				return true;
			}
		}
}
	

